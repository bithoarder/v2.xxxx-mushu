[gcode_macro PRINT_START]
gcode:
  {% set EXTRUDER = params.EXTRUDER|default(0)|int %}
  {% set BED = params.BED|default(0)|int %}
  {% set CHAMBER = params.CHAMBER|default(0)|int %} # todo: wait for temp to be reached

  CLEAR_PAUSE ; clear any pause state from prev print.

  # https://www.klipper3d.org/Skew_Correction.html
  # AC,BD,AD
  #SET_SKEW XY=140.97,141.65,99.85

  G21 ; set units to millimeters
  G90 ; absolute coordinates
  M83 ; extruder relative mode

  {% if BED >= 100 and EXTRUDER >= 250 %}
  # assume ABS/ASA, enable nevermore
  SET_FAN_SPEED FAN=nevermore_fan SPEED=1.0
  {% endif %}

  {% if BED > 0 %}
  M117 Heating bed...
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED}
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED-3} MAXIMUM={BED+5}
  {% endif %}

  {% if EXTRUDER > 0 %}
  M117 Heating extruder...
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER}
  {% endif %}

  # home and QGL while heating nozzle, this homing is only used for QGL, so any z offset from
  # plastic stuck to the nozzle does not matter.
  M117 QGL...
  G28
  QUAD_GANTRY_LEVEL

  {% if EXTRUDER > 0 %}
  M117 Heating extruder...
  _CLEAN_NOZZLE_MOVE_TO_BUCKET
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER-3} MAXIMUM={EXTRUDER+10}
  M117 Cleaning nozzle...
  _CLEAN_NOZZLE_PURGE
  _CLEAN_NOZZLE_BRUSH
  {% endif %}

  #G28 ; re-home with hot nozzle
  M117 Z Calibration...
  CALIBRATE_Z

  M400 ; wait for buffer to clear
  ; clear display
  M117

#  M117 Priming...
#  G92 E1 F1800 # undo: avoid oozing on bed while rehoming
#  G1 X{MIN_X+1} Y20 F6000
#  G1 Z0.25 F240
#  G92 E0
#  G1 Y80  E9 F2400 # moves 60 mm
#  G1 Y140 E12 F2400 # moves 60 mm
#  G1 X{MIN_X+0.5} F2400
#  G1 Y80 E12 F1200 # moves 60 mm
#  G1 Y100 F600 # moves 20 mm back (wiping)
#  G1 E-0.05 F1800 # retract a bit to avoid oozing while moving to print
#  G92 E0
#  M 117

####################################################################################################

[gcode_macro PRINT_END]
gcode:
  {% set MIN_X = printer.configfile.settings.stepper_x.position_min %}
  {% set MIN_Y = printer.configfile.settings.stepper_y.position_min %}
  {% set MAX_X = printer.configfile.settings.stepper_x.position_max %}
  {% set MAX_Y = printer.configfile.settings.stepper_y.position_max %}

  M400 # wait for buffer to clear
  M300 # beep
  G91 # rel movement
  G1 E-5.0 F3600 ; retract enough filament out of the hotend so that it can be removed after cooling.
  #G1 Z50 F6000
  _SAFE_LIFT Z=50
  G90 # absolute movement
  G0 X{(MIN_X+MAX_X)/2} Y{(MIN_Y+MAX_Y)/2} F6000 ; mode toolhead to center
  M107 # turn off fan
  #M84 # disable motors
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  #SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0
  M117 Finished!
  UPDATE_DELAYED_GCODE ID=clear_display DURATION=10

####################################################################################################

[gcode_macro CLEAN_NOZZLE]
# min pos for approaching bucket
variable_move_min_z: 5
variable_move_max_y: 280
# purge location (center of bucket)
variable_purge_x: 34
variable_purge_y: 300
variable_purge_amount: 25  # mm
variable_retract_amount: 5  # mm
# scrub height
variable_scrub_z: 0
# brush size
variable_brush_min_x: 61
variable_brush_max_x: 94
variable_brush_min_y: 297
variable_brush_max_y: 300
gcode:
  #{% if not printer.extruder.can_extrude %}
  #  { action_raise_error("Extrude below minimum temp") }
  #{% endif %}

  #{% if "xyz" not in printer.toolhead.homed_axes %}
  #  { action_raise_error("Printer not homed") }
  #{% endif %}

  _CLEAN_NOZZLE_MOVE_TO_BUCKET
  _CLEAN_NOZZLE_PURGE
  _CLEAN_NOZZLE_BRUSH

[gcode_macro _CLEAN_NOZZLE_MOVE_TO_BUCKET]
gcode:
  {% set SPEED_XY = (printer.configfile.config.quad_gantry_level.speed|float)*60 %} # mm/s
  {% set SPEED_Z = (printer.configfile.config.probe.lift_speed|float)*60 %} # mm/s
  {% set VARS = printer["gcode_macro CLEAN_NOZZLE"] %}

  SAVE_GCODE_STATE NAME=clean_nozzle_move
  G90  # absolute movement

  # clear bed probe and other stuff at the back of the printer
  {% if printer.toolhead.position.z < VARS.move_min_z %}
  G0 Z{VARS.move_min_z} F{SPEED_Z}
  {% endif %}
  {% if printer.toolhead.position.y > VARS.move_max_y %}
  G0 Y{VARS.move_max_y} F{SPEED_XY}
  {% endif %}

  G0 X{VARS.purge_x} F{SPEED_XY}
  G0 Y{VARS.purge_y} F{SPEED_XY}
  G0 Z{VARS.scrub_z} F{SPEED_Z}

  RESTORE_GCODE_STATE NAME=clean_nozzle_move

[gcode_macro _CLEAN_NOZZLE_PURGE]
gcode:
  {% set SPEED_XY = (printer.configfile.config.quad_gantry_level.speed|float)*60 %} # mm/s
  {% set SPEED_Z = (printer.configfile.config.probe.lift_speed|float)*60 %} # mm/s
  {% set VARS = printer["gcode_macro CLEAN_NOZZLE"] %}

  SAVE_GCODE_STATE NAME=clean_nozzle_purge

  G83  # relative e movement
  G1 E{VARS.purge_amount} F{5*60}
  G1 E{-VARS.retract_amount} F{10*60}  # retract

  RESTORE_GCODE_STATE NAME=clean_nozzle_purge

[gcode_macro _CLEAN_NOZZLE_BRUSH]
gcode:
  {% set SPEED_XY = (printer.configfile.config.quad_gantry_level.speed|float)*60 %} # mm/s
  {% set SPEED_Z = (printer.configfile.config.probe.lift_speed|float)*60 %} # mm/s
  {% set VARS = printer["gcode_macro CLEAN_NOZZLE"] %}

  SAVE_GCODE_STATE NAME=clean_nozzle_brush
  G90  # absolute movement

  {% set brush_y = range(VARS.brush_min_y|int, VARS.brush_max_y|int) | random %}
  G0 Y{brush_y} F{printer.configfile.config.quad_gantry_level.speed*60}
  G0 X{VARS.brush_max_x} F{50*60}
  G0 X{VARS.brush_min_x} F{50*60}
  G0 X{VARS.brush_max_x} F{50*60}
  G0 X{VARS.brush_min_x} F{50*60}

  G0 Z{VARS.move_min_z} F{SPEED_Z}

  RESTORE_GCODE_STATE NAME=clean_nozzle_brush

####################################################################################################

[gcode_macro _MIN_Z]
description: lifts tool head if below Z
gcode:
  {% set Z = params.Z|float %}
  {% set SPEED_Z = params.SPEED_Z|default(printer.configfile.config.probe.lift_speed)|float %} # mm/s

  {% if printer.toolhead.position.z < Z %}
    SAVE_GCODE_STATE NAME=min_z
    G90 # absolute movement
    G0 Z{Z} F{SPEED_Z*60}
    RESTORE_GCODE_STATE NAME=min_z
  {% endif %}

####################################################################################################

[gcode_macro _SAFE_LIFT]
description: lifts tool head relative (limited to printer height)
gcode:
  {% set Z = params.Z|default(10)|float %}
  {% set SPEED_Z = params.SPEED_Z|default(printer.configfile.config.probe.lift_speed)|float %} # mm/s

  SAVE_GCODE_STATE NAME=safe_lift
  G90 # absolute movement
  G0 Z{[printer.toolhead.position.z|float+Z, printer.toolhead.axis_maximum.z|float]|min} F{SPEED_Z*60}
  RESTORE_GCODE_STATE NAME=safe_lift

####################################################################################################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  {% set MAX_X = printer.configfile.settings.stepper_x.position_max %}
  {% set MAX_Y = printer.configfile.settings.stepper_y.position_max %}

  STOP_ALARM

  M220 S100 ; Reset Speed factor override percentage to default (100%)
  M221 S100 ; Reset Extrude factor override percentage to default (100%)
  G91 ; Set coordinates to relative
  {% if printer.extruder.can_extrude %}
    G1 E-1 F1800 ; Retract filament to prevent oozing
  {% endif %}

  ;if all axis are homed, lift the hotend to leave room for hot filament to ooze and to keep it clear of the bed.
  {% if printer.toolhead.homed_axes == "xyz" %}
    G1 Z10 F6000  ; Move Z Axis up 10 mm to allow filament ooze freely
    G90 ; Set coordinates to absolute
    G0 X{MAX_X-1} Y{MAX_Y-1} F6000 ; mode nozzle to corner
    M84 ; Disable stepper motors
  {% endif %}

  ; turn off extruder header, keep bed heated
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

####################################################################################################

[gcode_macro M300]
gcode:
  {% set S = params.S|default(1000)|float %}
  {% set P = params.P|default(100)|float %}

  #SET_PIN PIN=BEEPER VALUE=50 CYCLE_TIME={1/S|float}
  #G4 P{P}
  #SET_PIN PIN=BEEPER VALUE=0

####################################################################################################

[gcode_macro LOAD_FILAMENT]
gcode:
  {% set SPEED = params.SPEED|default(10)|float %}
  {% set LENGTH = params.LENGTH|default(25)|float %}
  {% set TEMP = params.TEMP|default(200)|float %}

  {% if TEMP > 0 %}
    M117 Heating...
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={TEMP}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={TEMP-5} MAXIMUM={TEMP+5}
    M117
  {% elif not printer.extruder.can_extrude %}
    { action_raise_error("Nozzle not hot enough") }
  {% endif %}

  SAVE_GCODE_STATE NAME=load
  M83 # relative mode

  # split extrusion into smaller chunks, missing ceil func
  {% set iterations = ((LENGTH/30.0)+1)|int %}
  {% for i in range(0, iterations) %}
    G1 E{LENGTH/iterations} F{SPEED*60}
  {% endfor %}
  G10  # retract

  M400 # wait for buffer to clear
  M300 # beep
  RESTORE_GCODE_STATE NAME=load

####################################################################################################

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set SPEED = params.SPEED|default(10)|float %}
  {% set LENGTH = params.LENGTH|default(25)|float %}
  {% set TEMP = params.TEMP|default(200)|float %}

  {% if TEMP > 0 %}
    M117 Heating...
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={TEMP}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={TEMP-5} MAXIMUM={TEMP+5}
    M117
  {% elif not printer.extruder.can_extrude %}
    { action_raise_error("Nozzle not hot enough") }
  {% endif %}

  SAVE_GCODE_STATE NAME=unload
  M83 # relative mode

  # split extrusion into smaller chunks, missing ceil func
  {% set iterations = ((LENGTH/30.0)+1)|int %}
  {% for i in range(0, iterations) %}
    G1 E-{LENGTH/iterations} F{SPEED*60}
  {% endfor %}

  M400 # wait for buffer to clear
  M300 # beep
  RESTORE_GCODE_STATE NAME=unload

####################################################################################################

[delayed_gcode clear_display]
gcode:
  M117

####################################################################################################

[gcode_macro CASE_LIGHT]
variable_mode: 'ON'
gcode:
  #{% set MODE = params.MODE|default('OFF') %}
  #{% if MODE|lower  == 'on' %}
  #  SET_LED LED=case RED=1.0 GREEN=0.8 BLUE=0.4
  #{% elif MODE|lower  == 'alarm' %}
  #  SET_LED LED=case RED=1 GREEN=0 BLUE=0
  #{% elif MODE|lower  == 'paused' %}
  #  SET_LED LED=case RED=1 GREEN=1 BLUE=0
  #{% elif MODE|lower  == 'idle' %}
  #  SET_LED LED=case RED=0 GREEN=0 BLUE=0.1
  #{% else %}
  #  SET_LED LED=case RED=0 GREEN=0 BLUE=0
  #{% endif%}
  #SET_GCODE_VARIABLE MACRO=CASE_LIGHT VARIABLE=mode VALUE="'{MODE}'"

####################################################################################################

# https://klipper.discourse.group/t/example-search-printer-objects/164
[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}

####################################################################################################

